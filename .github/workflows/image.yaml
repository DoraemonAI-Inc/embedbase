name: Publish Docker image

on:
  push:
    tags:
      - "*.*.*"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Get the version
        id: get_version
        # read in Makefile first line showing "VERSION="..."" and get the version number
        # remove the '"' and set it as an environment variable
        run: echo "VERSION=$(cat Makefile | grep VERSION | head -n 1 | cut -d '=' -f 2 | tr -d '"')" >> $GITHUB_ENV
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/embedbase:${{ env.VERSION }}
            ghcr.io/${{ github.repository_owner }}/embedbase:latest
      
      - name: Build and push dev
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile.dev
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/embedbase:latest-dev

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ github.ref }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
