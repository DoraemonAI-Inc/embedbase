name: Embedbase core release

on:
  push:
    branches:
      - main
      - next
      - rc
    paths:
      - "embedbase/**"
      # when pyproject.toml changes
      - "pyproject.toml"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - uses: actions-ecosystem/action-regex-match@v2
        id: regex-match
        with:
          text: ${{ github.event.head_commit.message }}
          regex: "^Release core ([^ ]+)"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Install dependencies
        run: |
          poetry install

      - name: Build package
        run: |
          poetry build

      - name: Publish to PyPI
        if: ${{ steps.regex-match.outputs.match != '' }}
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}
          poetry publish

      - name: Get version
        id: get_version
        run: |
          pip install toml
          VERSION=$(python -c 'import toml; print(toml.load("pyproject.toml")["tool"]["poetry"]["version"])')
          echo "version=${VERSION}" >> $GITHUB_ENV

      - uses: rickstaa/action-create-tag@v1
        if: ${{ steps.regex-match.outputs.match != '' }}
        id: "tag_create"
        with:
          tag: core-${{ env.version }}
          tag_exists_error: true
          message: ${{ github.event.head_commit.message }}

      - name: Create Release
        if: ${{ steps.regex-match.outputs.match != '' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: core-${{ env.version }}
          name: core-${{ env.version }}
          draft: false
          prerelease: false
          # TODO: iterate on this changelog thing later
          body: ${{ github.event.head_commit.message }}

      # TODO: until docker usage is clarified
      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v1
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.repository_owner }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build and push Embedbase production with minimal dependencies
      #   if: ${{ steps.regex-match.outputs.match != '' }}
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: ./docker/Dockerfile
      #     platforms: linux/amd64
      #     push: true
      #     build-args: FLAVOR=minimal
      #     tags: |
      #       ghcr.io/${{ github.repository_owner }}/embedbase:${{ env.VERSION }}-minimal

      # - name: Build and push dev
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: ./docker/Dockerfile.dev
      #     platforms: linux/amd64
      #     push: true
      #     build-args: FLAVOR=all
      #     tags: |
      #       ghcr.io/${{ github.repository_owner }}/embedbase:latest-dev

      # - name: Build and push Embedbase production with full dependencies
      #   if: ${{ steps.regex-match.outputs.match != '' }}
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: ./docker/Dockerfile
      #     platforms: linux/amd64
      #     push: true
      #     build-args: FLAVOR=all
      #     tags: |
      #       ghcr.io/${{ github.repository_owner }}/embedbase:${{ env.VERSION }}-all
      #       ghcr.io/${{ github.repository_owner }}/embedbase:latest
